@page "/livematch"
@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager NavigationManager

<PageTitle>Live Matches</PageTitle>

<div class="container mt-5">
    <h3 class="text-center mb-4 text-primary">Live Matches</h3>

    @if (MatchList.Any())
    {
        <div class="row">
            @foreach (var match in MatchList)
            {
                <div class="col-md-6 col-lg-4 mb-4">
                    <div class="card shadow-sm">
                        <div class="card-header bg-dark text-white text-center">
                            <h5>Match</h5>
                        </div>
                        <div class="card-body text-center">
                            <h4 class="text-success">@match.TeamA?.Name</h4>
                            <h5 class="text-muted">VS</h5>
                            <h4 class="text-danger">@match.TeamB?.Name</h4>
                        </div>
                        <div class="card-footer text-center">
                            <button class="btn btn-primary btn-sm" @onclick="() => ViewMatch(match.MatchId)">View Match</button>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="alert alert-warning text-center">
            <strong>No matches available!</strong> Check back later.
        </div>
    }
</div>

@code {
    private List<Match> MatchList = new List<Match>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var client = new HttpClient { BaseAddress = new Uri("https://localhost:7113/") };
            MatchList = await client.GetFromJsonAsync<List<Match>>("api/match");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching matches: {ex.Message}");
        }
    }

    private void ViewMatch(int matchId)
    {
        // Redirect to match details page (optional)
        NavigationManager.NavigateTo($"/matches");
    }
}
