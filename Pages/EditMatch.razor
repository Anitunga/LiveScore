@page "/matches/edit/{MatchId:int}"
@inject IHttpClientFactory HttpClientFactory
@inject NavigationManager NavigationManager

<PageTitle>Edit Match</PageTitle>

<div class="container mt-5">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white text-center">
            <h3>Edit Match: @MatchId</h3>
        </div>
        <div class="card-body">
            <EditForm Model="MatchToEdit" OnValidSubmit="HandleEditMatch">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="row mb-3">
                    <div class="col-md-6">
                        <label for="teamA" class="form-label">Team A:</label>
                        <InputSelect id="teamA" class="form-select" @bind-Value="MatchToEdit.TeamAId">
                            <option value="">Select Team A</option>
                            @foreach (var team in Teams)
                            {
                                <option value="@team.TeamId">@team.Name</option>
                            }
                        </InputSelect>
                    </div>
                    <div class="col-md-6">
                        <label for="teamB" class="form-label">Team B:</label>
                        <InputSelect id="teamB" class="form-select" @bind-Value="MatchToEdit.TeamBId">
                            <option value="">Select Team B</option>
                            @foreach (var team in Teams)
                            {
                                <option value="@team.TeamId">@team.Name</option>
                            }
                        </InputSelect>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-4">
                        <label for="totalQuarters" class="form-label">Total Quarters:</label>
                        <InputNumber id="totalQuarters" class="form-control" @bind-Value="MatchToEdit.TotalQuarters" />
                    </div>
                    <div class="col-md-4">
                        <label for="quarterDuration" class="form-label">Quarter Duration (seconds):</label>
                        <InputNumber id="quarterDuration" class="form-control" @bind-Value="MatchToEdit.QuarterDuration" />
                    </div>
                    <div class="col-md-4">
                        <label for="timeoutDuration" class="form-label">Timeout Duration (seconds):</label>
                        <InputNumber id="timeoutDuration" class="form-control" @bind-Value="MatchToEdit.TimeoutDuration" />
                    </div>
                </div>

                <div class="text-center mt-4">
                    <button type="submit" class="btn btn-primary btn-lg me-2">Save Changes</button>
                    <button type="button" class="btn btn-secondary btn-lg" @onclick="Cancel">Cancel</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [Parameter] public int MatchId { get; set; }
    private Match MatchToEdit = new Match();
    private List<Team> Teams = new List<Team>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var client = new HttpClient { BaseAddress = new Uri("https://localhost:7113/") };

            // Fetch teams for dropdown
            Teams = await client.GetFromJsonAsync<List<Team>>("api/teams");

            // Fetch match details
            MatchToEdit = await client.GetFromJsonAsync<Match>($"api/match/{MatchId}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading data: {ex.Message}");
        }
    }

    private async Task HandleEditMatch()
    {
        try
        {
            var client = new HttpClient { BaseAddress = new Uri("https://localhost:7113/") };
            var response = await client.PutAsJsonAsync($"api/match/{MatchId}", MatchToEdit);

            if (response.IsSuccessStatusCode)
            {
                NavigationManager.NavigateTo("/matches");
            }
            else
            {
                Console.WriteLine("Failed to update match.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error saving changes: {ex.Message}");
        }
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/matches");
    }
}
